---
meta:
  name:    safe
  release: safe
  target:  sw
  url:     https://ci.starkandwayne.com

  initial_version: 0.0.1

  git:
    email: ci@starkandwayne.com
    name:  Stark & Wayne CI Bot

  bosh-lite:
    target: https://10.58.111.44:25555
    username: (( vault "secret/bosh-lites/lite44/users/admin:username" ))
    password: (( vault "secret/bosh-lites/lite44/users/admin:password" ))
    cacert:   (( vault "secret/bosh-lites/lite44/certs:rootCA.pem" ))

  aws:
    access_key: (( vault "secret/aws/cfcommunity:access" ))
    secret_key: (( vault "secret/aws/cfcommunity:secret" ))

  github:
    owner:  cloudfoundry-community
    repo:   safe-boshrelease
    branch: master
    private_key:  (( vault "secret/pipelines/safe-boshrelease/github:private" ))
    access_token: (( vault "secret/pipelines/safe-boshrelease/github:token" ))

  slack:
    webhook: (( vault "secret/pipelines/safe-boshrelease/slack:webhook" ))
    channel: '#vault'

    blob_success:  '(( concat "$BUILD_PIPELINE_NAME: New version of $BUILD_JOB_NAME was detected, and updated in master. <" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME| Cut a new release?>" ))'
    blob_failure:  '(( concat "$BUILD_PIPELINE_NAME: :airplane_arriving: <" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| Failed to update the blob for $BUILD_JOB_NAME>" ))'


groups:
  - name: blobs
    jobs:
      - strongbox

jobs:
  - name: strongbox # {{{
    public: true
    plan:
    - aggregate:
      - { get: git }
      - { get: strongbox, trigger: true }
    - task: update-strongbox
      config:
        image: docker:///starkandwayne/concourse
        platform: linux
        inputs:
        - name: git
        - name: strongbox
        outputs:
        - name: pushme
        run:
          path: ./git/ci/scripts/update-blob
        params:
          REPO_ROOT:        git
          REPO_OUT:         pushme
          RELEASE_DIR:      strongbox
          BLOB:             strongbox
          BLOB_BINARY:      strongbox-linux-amd64
          BLOB_DESTINATION: strongbox/strongbox
          AWS_ACCESS_KEY:   (( grab meta.aws.access_key ))
          AWS_SECRET_KEY:   (( grab meta.aws.secret_key ))
          BRANCH:       (( grab meta.github.branch ))
      on_failure:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:     (( grab meta.slack.blob_failure ))
    - put: git
      params:
        rebase: true
        repository: pushme/git
      on_success:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:     (( grab meta.slack.blob_success ))
      on_failure:
        put: notify
        params:
          channel:  (( grab meta.slack.channel ))
          username: (( grab meta.slack.username ))
          icon_url: (( grab meta.slack.icon ))
          text:     (( grab meta.slack.blob_failure ))
  # }}}

resources:
  - name: strongbox # {{{
    type: github-release
    source:
      user:         jhunt
      repository:   go-strongbox
      access_token: (( grab meta.github.access_token ))
  # }}}
